(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{482:function(i,_,t){"use strict";t.r(_);var e=t(8),v=Object(e.a)({},(function(){var i=this,_=i.$createElement,t=i._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[t("p",[i._v("版本控制與平台託管。")]),i._v(" "),t("p",[i._v("首先分別來介紹 Git 與 Github：")]),i._v(" "),t("ol",[t("li",[t("p",[i._v("Git：分散式版本控制系統。")]),i._v(" "),t("p",[i._v("一般來說版本控制又可以分為"),t("strong",[i._v("中央式")]),i._v("與"),t("strong",[i._v("分散式")]),i._v("系統。")]),i._v(" "),t("ul",[t("li",[t("strong",[i._v("中央式")]),i._v("：例如"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Subversion",target:"_blank",rel:"noopener noreferrer"}},[i._v("SVN"),t("OutboundLink")],1),i._v("、"),t("a",{attrs:{href:"%5Bhttps://zh.wikipedia.org/wiki/%E5%8D%94%E4%BD%9C%E7%89%88%E6%9C%AC%E7%B3%BB%E7%B5%B1%5D(https://zh.wikipedia.org/wiki/%E5%8D%94%E4%BD%9C%E7%89%88%E6%9C%AC%E7%B3%BB%E7%B5%B1)"}},[i._v("CVS")]),i._v("等，主要在一個伺服器進行，由中央管理存取權限「鎖上」檔案庫中的檔案，一次只能讓一個開發者進行工作。")]),i._v(" "),t("li",[t("strong",[i._v("分散式")]),i._v("：例如"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Git",target:"_blank",rel:"noopener noreferrer"}},[i._v("Git"),t("OutboundLink")],1),i._v("、"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/BitKeeper",target:"_blank",rel:"noopener noreferrer"}},[i._v("BitKeeper"),t("OutboundLink")],1),i._v("、"),t("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Mercurial",target:"_blank",rel:"noopener noreferrer"}},[i._v("Mercurial"),t("OutboundLink")],1),i._v("等，讓不同開發者直接在各自的本地檔案庫工作，並容許多個開發者同時更動同一個檔案，而每個檔案庫有另外一個合併各個改變的功能。分散式系統讓開發者能在沒有網路的情況下也能繼續工作，也讓開發者有充分的版本控制能力，而不需經中央管理者的許可，但分散式系統仍然可以有檔案上鎖功能。")])])]),i._v(" "),t("li",[t("p",[i._v("Github：支援 git 程式碼存取和遠端托管的平台服務，有許多的開放原始碼的專案都是使用 Github 進行程式碼的管理。")])])]),i._v(" "),t("p",[i._v("以下將條列我常用的 Git 指令：")]),i._v(" "),t("ul",[t("li",[t("p",[t("code",[i._v("mkdir demo")]),i._v("：創建一個叫做 demo 的資料夾。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("touch index.html")]),i._v("：新增 index.html 這個檔案。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("cd")]),i._v("：cd 加一個空白鍵後，再按下 tab 鍵會列出當前目錄的清單。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("cd demo")]),i._v("：前往 demo 這個資料夾。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("cd ..")]),i._v("：回資料夾的上一層。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("cd ~")]),i._v("：回到電腦最外層，像是根目錄 Home 之類的。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git init")]),i._v("：初始化 git，創建 git 儲存庫。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git clone [Repository URL]")]),i._v("：複製遠端的 Repository 檔案到本地端。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git status")]),i._v("：檢查本地端檔案異動狀態。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git add [檔案或資料夾]")]),i._v("：將指定的檔案或資料夾加入版本控制。用 "),t("code",[i._v("git add .")]),i._v(" 可加入全部。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v('git commit -m "提交說明內容"')]),i._v("：提交目前的異動並透過 "),t("code",[i._v("-m")]),i._v(" 參數設定摘要說明文字。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git stash")]),i._v("：獲取目前工作目錄的 dirty state，並保存到一個未完成變更的 stack，以方便隨時回復至當初的 state。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git log")]),i._v("：查看先前的 commit 記錄。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git push")]),i._v("：將本地端 Repository 的 commit 發佈到遠端。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git push origin [BRANCH_NAME]")]),i._v("：發佈至遠端指定的分支。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git branch")]),i._v("：查看分支。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git branch [BRANCH_NAME]")]),i._v("：建立分支。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git checkout [前四碼]")]),i._v("：取出指定的分支。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git checkout -b [前四碼]")]),i._v("：建立並跳到該分支。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git branch -d [前四碼]")]),i._v("：強制刪除指定分支（須先切換至其他分支再做刪除）。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git reset --hard [前四碼]")]),i._v("：強制恢復到指定的 commit。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git branch -m <OLD_BRANCH_NAME> <NEW_BRANCH_NAME>")]),i._v("：修改分支名稱。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git pull")]),i._v("：將最新版本 pull 下來，此時會自動進行 merge。")])]),i._v(" "),t("li",[t("p",[t("code",[i._v("git fetch")]),i._v("：有時候不希望 pull 下來導致自己的數據庫太亂又擔心有衝突時，可以先使用下面這個指令。等到看過沒問題後，再進行合併的動作。如果不滿意，不需要撤銷，"),t("code",[i._v("git fetch")]),i._v("對本地分支没有影響。")])])])])}),[],!1,null,null,null);_.default=v.exports}}]);